services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
      target: api-dev
    ports:
      - "3001:3001"
      - "5678:5678"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYDEVD_DISABLE_FILE_VALIDATION=1
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/devengo
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  client:
    build:
      context: .
      dockerfile: Dockerfile.client
      target: client-dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    command: npm run dev -- --host --port 3000
    depends_on:
      - api
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "devengo"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
